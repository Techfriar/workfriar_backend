version: "3.8"
services:
  # Express app
  workfriar-app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - MONGO_URI=${MONGO_URI}
      - REDIS_HOST=${REDIS_HOST}
      - MINIO_ENDPOINT=http://minio:${MINIO_PORT} # Ensure internal service communication
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - "3002:3002"
    volumes:
      - .:/app # Mount the project directory into the container
      - /app/node_modules # Prevent overwriting node_modules inside the container
    command: yarn server # Run the nodemon script from package.json
    depends_on:
      - mongo
      - redis
      - minio
    networks:
      - workfriar-network

  # MongoDB service
  mongo:
    image: mongo:latest
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DB_NAME}
    ports:
      - "${MONGO_PORT}:${MONGO_INTERNAL_PORT}"
    volumes:
      - mongo_data:/data/db
    networks:
      - workfriar-network

  # Redis service
  redis:
    image: redis:latest
    ports:
      - "${REDIS_PORT}:${REDIS_INTERNAL_PORT}"
    networks:
      - workfriar-network

  # MinIO service
  minio:
    image: minio/minio:latest
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server --address ":${MINIO_PORT}" --console-address ":${MINIO_CONSOLE_PORT}" /data
    ports:
      - "${MINIO_PORT}:${MINIO_INTERNAL_PORT}"
      - "${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_INTERNAL_PORT}"
    volumes:
      - minio_data:/data
    networks:
      - workfriar-network

networks:
  workfriar-network:
    driver: bridge

volumes:
  mongo_data:
  minio_data:
